%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (GraphicsMagick)
%%Title: (output-norm/60fps/60STD_BAND-0-3.75.eps)
%%CreationDate: (Thu Mar  7 17:49:06 2019)
%%BoundingBox: 0 0 15 15
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 15 15
userdict begin
DisplayImage
0 0
15 15
12.000000
15 15
0
0
00009700009F0000A70000B30000CB0000DB0000EF0000F70003FF000FFF001FFF0037FF
0047FF004BFF0007FF0000AB0000CB0000E30007FF002BFF003FFF0057FF0063FF007FFF
0093FF00ABFF00C7FF00F3FF00FFFF008BFF0000D3000FFF003FFF0067FF0093FF00B7FF
00DFFF00FFFF13FFEB1FFFDF37FFC74BFFB387FF777FFF7F00E3FF000BFF0073FF00A3FF
00C3FF00D7FF0FFFEF6FFF8F97FF67ABFF5397FF67CBFF33C7FF37EBFF13EFFF0F3BFFC3
002FFF00B3FF00EFFF13FFEB2BFFD363FF9BBFFF3FFFF700FFE700FFDF00FFA700FFA300
FF8700FF9B008FFF6F003FFF00BFFF00FFFF37FFC763FF9B9FFF5FE7FF17FFD700FFC300
FF9F00FF3300FF1700FF0B00FF3300CFFF2F0033FF00AFFF00FBFF53FFAB9BFF63CFFF2F
BFFF3FFBFF03FFC300FF4300FB0000E70000D70000C70000FFE300001BFF009BFF00EFFF
53FFAB93FF6BEBFF13DBFF23FFFB00FFCF00FF4700C70000830000970000B70000FBFF03
0000EF005BFF00AFFF1BFFE36BFF93D7FF27DBFF23FFE300FFAB00FF0700AF00007F0000
A70000BB0000F3FF0B0000C7000FFF004BFF009FFF00EBFF57FFA78BFF73F3FF0BFFD300
FF6B00FF1B00B30000BB0000F30000A7FF570000B30000D30000E30013FF006BFF00BFFF
03FFFB53FFABABFF53FBFF03FFBF00FF6700FF2300EF0000DBFF230000AF0000C30000BF
0000D3000BFF0037FF0067FF0087FF00CFFF00F7FF33FFCB9BFF63FFFB00FF970077FF87
0000A70000B70000B70000C70000EF0003FF0013FF000BFF0033FF006FFF00BFFF00FFFF
37FFC783FF7B00EFFF0000A30000B30000B70000C70000DB0000E30000E30000DF0000FB
0023FF0043FF005BFF005BFF007BFF002BFF0000970000A30000A70000AF0000B70000B7
0000B30000BB0000D30000EF0000FB0000FB0000F30000F70000CF

end
%%PageTrailer
%%Trailer
%%EOF

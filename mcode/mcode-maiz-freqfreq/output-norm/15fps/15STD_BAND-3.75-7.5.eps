%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (GraphicsMagick)
%%Title: (output-norm/15fps/15STD_BAND-3.75-7.5.eps)
%%CreationDate: (Thu Apr  4 16:22:05 2019)
%%BoundingBox: 0 0 15 15
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 15 15
userdict begin
DisplayImage
0 0
15 15
12.000000
15 15
0
0
0000AF0000AF0000AF0000B30000C70000DB0000FB0003FF0023FF001FFF003BFF0057FF
004FFF0073FF007FFF0000B70000DF0000FB003BFF005BFF007FFF009BFF00CBFF00C3FF
23FFDB00DBFF1FFFDF03FFFB3FFFBF4FFFAF0000FF0073FF00ABFF00C7FF00E3FF00F3FF
1FFFDF63FF9B0FFFEF77FF874FFFAF87FF77B7FF47E3FF1BD7FF2700BFFF00BBFF00E3FF
1BFFE357FFA76FFF8F73FF8B77FF8793FF6B93FF6BFFEB00FFC700FF5B00FFCF00FF7700
00C7FF0FFFEF63FF9B5BFFA39BFF63CBFF33D7FF27E7FF17DFFF1FFF7300FF7300FF8700
FF3F00FF5300FF430000F3FF07FFF72BFFD387FF77BBFF43BFFF3FC7FF37F7FF07FFD700
FF7700FF3B00FF8300CF00007F0000FB000000F7FF47FFB75FFF9FB7FF479FFF5FFFFF00
FF1B00FFEB00FF9300FF9300A70000FF0B00FF0F00FF4700FF5B00008FFF1FFFDF33FFCB
73FF8BDFFF1FB7FF47FF9700FF8F00FFA300FF3300B70000F30000FF1F00FF1700F30000
0037FF00BBFF43FFBB5FFF9FBFFF3FCBFF33FFC300FF9F00FF5F00FF0B00AF0000FF3B00
FF2300FF5300FF3F000000DB003FFF00F3FF00FBFFD3FF2BC3FF3BCBFF33D3FF2BFF5F00
FF9F00FF3F00D70000FF0300EB0000E700000000D70000CF000BFF004FFF00FFFF3FFFBF
7FFF7F9FFF5FFFDF00FF9300FF8F00FF1F00FF3B00FF3300E700000000C70000B70000BB
0000D3000BFF005FFF008BFF00DBFFD3FF2BAFFF4FFFAF00FF5300D70000FF0F00FF0F00
0000D70000C30000C70000BB0000C30000EF0000FF001BFF0027FF0067FF00A3FF2FFFCF
FFBF00FFBF00FF87000000CF0000E70000C70000BB0000B70000EB000FFF0000DB0000E3
001FFF0003FF000BFF1FFFDF00CBFF00E7FF0000B70000AF0000AF0000C30000CF0000FB
0000FB0000E70000C70000EF0000F70000EF0043FF0000EB0007FF

end
%%PageTrailer
%%Trailer
%%EOF

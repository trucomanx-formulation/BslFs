%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (GraphicsMagick)
%%Title: (output-norm/30fps/30STD_BAND-0-3.75.eps)
%%CreationDate: (Fri Mar  8 14:28:21 2019)
%%BoundingBox: 0 0 15 15
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 15 15
userdict begin
DisplayImage
0 0
15 15
12.000000
15 15
0
0
0000A300009B00009F00009F0000AB0000BF0000C30000E30000EB0000DB0000EB0000EF
001BFF000FFF002FFF00009F0000AF0000C30000CB000FFF005BFF006BFF0057FF0087FF
004FFF0077FF0067FF00C3FF0083FF00B3FF0000C70000EF003BFF009FFF007FFF0083FF
0077FF00E3FF00DFFF00EBFF37FFC703FFFB03FFFB00D3FF2FFFCF003BFF007BFF004BFF
00BBFF00AFFF00ABFF00A3FF0FFFEF00FBFF7BFF8393FF6B73FF8BFFA30007FFF777FF87
006BFF008FFF007BFF00C7FF00DBFF03FFFB3FFFBF3BFFC38BFF73B7FF47CBFF33FFCF00
FFE3008FFF6FFF5B00003FFF005BFF00DBFF00DFFF2FFFCF17FFE723FFDBFBFF03FFF300
97FF677FFF7F9FFF5F8FFF6F47FFB7FFFB00002FFF0043FF00D3FF00C3FF17FFE72FFFCF
53FFABFFF300FF8300E3FF1BFFAF00FFB300FF0F00FF2700FF83000027FF005BFF00B7FF
00D7FF83FF7B5BFFA3FFE70043FFBBFFD300D3FF2BFF8F00FFA300FF2700C700007F0000
0000D70037FF009BFF00E3FF6BFF9300FBFF8FFF6FE7FF17ABFF53CFFF2FFFDB00FF2700
FF6700FFC700F300000000DF0000DB002BFF0073FF0093FF00D7FF00DBFF9BFF63FF6700
67FF97FFAB00FFAB00EFFF0FFF1300FF93000000D70000A70000B70000CB000BFF00A7FF
00C3FFC7FF376BFF936FFF8F77FF87A7FF57FF5300FF3B00FFAF000000AF0000A70000BB
0000AB0000BB0000FB0043FF005FFF0BFFF307FFF72FFFCF9BFF63DBFF23F3FF0B73FF8B
0000AB0000B30000BB0000BB0000BB0000CF0007FF0000F30000FF0027FF0053FF005FFF
00A3FF2BFFD323FFDB0000D30000AB0000AB0000A30000AB0000FB0000CB0000DB0000D7
0000FB0000DB0000F3001BFF0023FF002BFF0000C70000B30000BB0000D70000CF0000DF
0000C70000C70000E70000D30000E30000EB0007FF0000EF0000FB

end
%%PageTrailer
%%Trailer
%%EOF

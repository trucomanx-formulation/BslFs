%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (GraphicsMagick)
%%Title: (output/15fps/15STD_BAND-0-3.75.eps)
%%CreationDate: (Thu Apr  4 16:21:55 2019)
%%BoundingBox: 0 0 15 15
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 15 15
userdict begin
DisplayImage
0 0
15 15
12.000000
15 15
0
0
0000B30000A70000A70000A70000C30000CF0000DB0000E70000FF0017FF002FFF0027FF
0037FF0043FF0053FF0000B70000C70000E30037FF005BFF005BFF0083FF008BFF00CBFF
00AFFF00E3FF00CFFF00DFFF23FFDB2FFFCF0000EF003FFF008BFF00CBFF00FFFF00E7FF
27FFD73BFFC33BFFC33BFFC367FF9753FFABB3FF4B93FF6B9BFF63008BFF009FFF00F3FF
00FBFF00FBFF5FFF9F57FFA763FF9B93FF6B73FF8BF7FF07FFCB00FF9300FFDB00FF7B00
00BBFF00F7FF07FFF70FFFEF97FF67C7FF37FF9700B7FF47D3FF2BFF8700FF7B00FF5700
FF4B00FF8300FF57000097FF00BFFF67FF9767FF97ABFF53FFE300FFA300FFA700FFA700
FF4300FF2300FF5300FF3F00FF3700FF570000DBFF07FFF743FFBBE3FF1BFFFB00F3FF0B
FF3B00FFCB00FF3300F30000FF0F00FF0F00FF0B00FF3700FF3B00006FFF0BFFF323FFDB
ABFF53FFDB00FFE700FF7300FF7B00FF8B00FF4B009B0000FF0300FF4300FF2300FF5F00
003BFF0093FF00FFFF43FFBBFFEB00C3FF3BFF2B00FFAF00FF9300FF3B00C70000FF1300
FF0700FF1700FF43000000DB003FFF00C7FF17FFE783FF7BFFA300FFEB00FF8F00FFA300
E30000FF4300FF3300F70000FF3700FF53000000DF0000CF0003FF005BFF00F7FF73FF8B
5FFF9FD3FF2BFF7700FF8B00FF8300FF0700D30000FF3300FF07000000C30000B70000D3
0000C30003FF0087FF00E3FF2FFFCFFFB700F7FF07FFBF00FF4300FF6F00FF0700FF1F00
0000DB0000D70000F30000D30000C70000F7001BFF0013FF003FFF007FFF00B3FF53FFAB
FFCF00FFEB00FFFB000000EF0000D30000F30000BF0000C3000BFF0027FF0000DB0000E7
0027FF0023FF0023FF00AFFF00B7FF00E3FF0000BB0000B70000B70000CF0000F70033FF
002BFF000FFF0000CB0007FF0023FF0013FF0007FF002BFF000BFF

end
%%PageTrailer
%%Trailer
%%EOF
